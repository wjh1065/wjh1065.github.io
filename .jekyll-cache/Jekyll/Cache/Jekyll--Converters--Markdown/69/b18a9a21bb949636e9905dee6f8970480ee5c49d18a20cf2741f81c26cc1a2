I"i'<p>Auspice by Goorm, Manage by DAVIAN @ KAIST</p>

<h2 id="lecture-1-environment">Lecture 1: Environment</h2>

<p><strong>운영체제</strong></p>

<ol>
  <li>Windows
    <ul>
      <li>친숙함, 한컴, 공인인증서 등 사용가능.</li>
      <li>한국에서 사용하기 편한 운영체제.</li>
    </ul>
  </li>
  <li>Linux
    <ul>
      <li>서버 호환 쉬움. (WSL, SSH)</li>
      <li>특정 라이브러리 설치 용이, 개인에게 무료 운영체제.</li>
      <li>개인적으로 대학 연구실에서 GPU 서버 구축한 경험이 있어서 사용하는데 큰 어려움이 없음.</li>
    </ul>
  </li>
  <li>Mac
    <ul>
      <li>현재 사용하고 있는 노트북 운영체제.</li>
      <li>유닉스 운영체제이므로 Linux와 큰 차이 없음.</li>
    </ul>
  </li>
</ol>

<p><strong>Alternative Options for Window Users</strong></p>

<ol>
  <li>Virtual Box. (가상 환경 사용)</li>
  <li>WSL 사용.</li>
  <li>Colab. (구글 클라우드 기반 IDE)</li>
  <li>goormide. (현 수강하고 있는 goorm의 클라우드 기반 IDE)</li>
</ol>

<p><strong>Code Editor</strong></p>

<ol>
  <li>text editor. (메모장)</li>
  <li>VIM. (터미널에서 간단한 편집을 할 때 사용한 편집기)</li>
  <li>Atom.</li>
  <li>VScode. (Visual Studio Code)</li>
  <li>PyCharm. (현재 내가 사용하고 있는 에디터)</li>
</ol>

<p><strong>Web-based IDE</strong></p>

<p>Jupyter Notebook, Jupyter Lab
두개의 툴 모두 사용한 적이 있어 큰 어려움이 없음.</p>

<p><strong>Cloud-based IDE</strong></p>

<p>Colab
강의에서 메인으로 사용할 예정.
학부때 사용한 적이 있어 다루는데 큰 어려움이 없음.
마크다운과 코드 결과 리뷰 할 때 편함. (ipynb)</p>

<p>Goorm IDE
사용하고싶었으나, 이번 강의에서는 사용 안함.</p>

<p><strong>Package &amp; Environment Manager</strong></p>

<p>현재 출시된 외부 라이브러리는 너무 많음.</p>

<ul>
  <li>설치 및 관리를 자동화할 도구 필요.</li>
  <li>환경 간 쉬운 전환 필요.</li>
</ul>

<p>PIP + Virtual env -&gt; Python 기본 패키지 관리 프로그램.
Anaconda3 -&gt; 기계학습 및 수치해석 특화 패키지 관리 프로그램.</p>

<p>Anaconda3는 여러 패키지를 한번에 설치하므로 용량을 꽤 먹음. 
-&gt; miniconda 설치함. ( + 애플 실리콘 칩 호환)</p>

<hr />

<h2 id="lecture-2-jupyter">Lecture 2: Jupyter</h2>

<p>일반적으로 Python의 확장자는 .py이지만, 파이썬의 interactive함을 사용 못함.
(.py는 한 줄 씩 실행하는 것이 아닌 코드 전체를 RUN하는 방식)</p>

<p><strong>Ipython 커널을 기반으로한 Interactive 파이썬 셀 프로그래밍</strong></p>

<ul>
  <li>.ipynb 파일 확장자.</li>
  <li>Jupyter라는 웹 기반 IDE 사용함.</li>
  <li>VsCode 및 PyCharm, Colab에서도 사용 가능함.</li>
  <li>미디어, 코드, 수식 등을 하나의 문서 형태로 표현 가능. (마크다운)</li>
</ul>

<h2 id="lecture-3-variable--operator">Lecture 3: Variable &amp; Operator</h2>

<ul>
  <li>Primitive Data Types (원시 자료형): 가장 기본이 되는 자료형.</li>
</ul>

<p align="center"><img src="https://user-images.githubusercontent.com/67947808/147907261-c6d16af2-bcb5-488f-a7ab-091d58768696.png" width="90%" height="90%" /></p>

<ul>
  <li>Arithmetic Operator: 산술 연산을 위해서 산술 연산자를 활용.</li>
</ul>
<p align="center"><img src="https://user-images.githubusercontent.com/67947808/147907492-d85f05ec-22cc-454d-8e9a-59b795a6dac9.png" width="50%" height="50%" /></p>

<ul>
  <li>Bit Operator: 비트 연산을 위해서 비트 연산자를 활용.</li>
</ul>
<p align="center"><img src="https://user-images.githubusercontent.com/67947808/147908104-0db1d431-44eb-40e6-b3ec-116588c058fb.png" width="50%" height="50%" /></p>

<ul>
  <li>
    <p>In-place &amp; Out-place: 산술/비트 연산자는 대입 연산자와 함께 축약 가능.
ex) a += 1 는 <em>In-place</em> 연산, a = a + 1은 <em>Out-place</em> 연산</p>
  </li>
  <li>
    <p>Condition Operators: 객체 간의 비교를 위해서 비교 연산자 활용.<br />
bool끼리의 연산은 논리 연산자를 활용.</p>
  </li>
</ul>
<p align="center"><img src="https://user-images.githubusercontent.com/67947808/147908401-f15016b5-1c53-4178-8f93-c2e27b04bd19.png" width="90%" height="90%" /></p>

<ul>
  <li>Immutable Types &amp; Mutable Types
파이썬에서 대입은 원칙적으로 메모리 주소 복사. 
(즉, 값을 복사하지 않고 같은 주소를 공유함)</li>
</ul>

<p>불변형의 경우 수정이 필요한 경우에 <em>새로운 객체</em> 를 생성.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">1</span>  
<span class="o">&gt;&gt;&gt;</span> <span class="n">b</span> <span class="o">=</span> <span class="mi">1</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="ow">is</span> <span class="n">b</span>
<span class="bp">True</span>

<span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">13453436</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">b</span> <span class="o">=</span> <span class="mi">13453436</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="ow">is</span> <span class="n">b</span>
<span class="bp">False</span>

<span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="err">‘</span><span class="n">text</span><span class="err">’</span>  
<span class="o">&gt;&gt;&gt;</span> <span class="n">b</span> <span class="o">=</span> <span class="err">‘</span><span class="nb">long</span><span class="o">-</span><span class="nb">long</span><span class="o">-</span><span class="n">text</span><span class="err">’</span>  
<span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="ow">is</span> <span class="err">‘</span><span class="n">text</span><span class="err">’</span><span class="p">,</span> <span class="n">a</span> <span class="o">==</span> <span class="err">‘</span><span class="n">text</span><span class="err">’</span><span class="p">,</span> <span class="n">b</span> <span class="ow">is</span> <span class="err">‘</span><span class="nb">long</span><span class="o">-</span><span class="nb">long</span><span class="o">-</span><span class="n">text</span><span class="err">’</span><span class="p">,</span> <span class="n">b</span> <span class="o">==</span> <span class="err">‘</span><span class="nb">long</span><span class="o">-</span><span class="nb">long</span><span class="o">-</span><span class="n">text</span><span class="err">’</span>
<span class="p">(</span><span class="bp">True</span><span class="p">,</span> <span class="bp">True</span><span class="p">,</span> <span class="bp">False</span><span class="p">,</span> <span class="bp">True</span><span class="p">)</span> 

<span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="bp">True</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="ow">is</span> <span class="bp">True</span>
<span class="bp">True</span>

<span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="bp">None</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="ow">is</span> <span class="bp">None</span>
<span class="bp">True</span>
</code></pre></div></div>

<ul>
  <li>Dynamic Typing: 코드 실행 지점에서 데이터의 Type을 결정함.</li>
</ul>

<pre><code class="language-C">int first = 10
int second = 20
printf("%d", first + second);
</code></pre>

<p>C 예시</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">first</span> <span class="o">=</span> <span class="mi">10</span>
<span class="n">second</span> <span class="o">=</span> <span class="mi">20</span>
<span class="k">print</span><span class="p">(</span><span class="n">first</span> <span class="o">+</span> <span class="n">second</span><span class="p">)</span>
</code></pre></div></div>

<p>Python 예시</p>

<ul>
  <li>
    <p>Implicit Type Conversion:<br />
bool -&gt; int -&gt; float -&gt; complext 순서.
None type과, str type은 별개.
int간 나누기 -&gt; float
정수 나누기 -&gt; //</p>
  </li>
  <li>
    <p>Explicit Type Conversion:
  아래 명령어로 명시적 형 변환 가능.</p>
    <ul>
      <li>int(value)</li>
      <li>float(value)</li>
      <li>str(value)</li>
    </ul>
  </li>
</ul>

<p>실수 -&gt; 정수: 소수점 내림. (반올림의 경우 <em>round</em> 내장 함수 사용)</p>

<ul>
  <li>
    <p>빈문자열, 0, None은 False로 변환.</p>
  </li>
  <li>
    <p>Type Checking
type 내장 함수로 변수의 타입 확인 가능.
isintance 내장 함수로 변수가 지정 타입인지 확인.</p>
  </li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span> <span class="o">=</span> <span class="mi">123</span>
<span class="n">b</span> <span class="o">=</span> <span class="mf">12.3</span>
<span class="n">c</span> <span class="o">=</span> <span class="s">'12.3'</span>

<span class="o">&gt;&gt;&gt;</span><span class="nb">type</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
<span class="o">&lt;</span><span class="k">class</span> <span class="err">'</span><span class="nc">int</span><span class="o">&gt;</span>

<span class="o">&gt;&gt;&gt;</span><span class="nb">type</span><span class="p">(</span><span class="n">b</span><span class="p">)</span>
<span class="o">&lt;</span><span class="k">class</span> <span class="err">'</span><span class="nc">float</span><span class="s">'&gt;

&gt;&gt;&gt;type(c)
&lt;class '</span><span class="nb">str</span><span class="s">'&gt;
</span></code></pre></div></div>
:ET